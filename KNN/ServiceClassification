import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
df = pd.read_csv('https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-ML0101EN-SkillsNetwork/labs/Module%203/data/teleCust1000t.csv')
df.head()
df['custcat'].value_counts()
correletion_matrix = df.corr()
plt.figure(figsize=(20 , 16))
sns.heatmap(correletion_matrix , annot=True , cmap='coolwarm' , fmt = '.2f' , linewidths=0.5)
plt.show()
correletion_vlues = abs(df.corr()['custcat'].drop('custcat'))
correletion_vlues
X = df.drop(['custcat'], axis=1)
X_norm = StandardScaler().fit_transform(X)
y = df['custcat']
X_train , X_test , y_train , y_test = train_test_split(X_norm , y , test_size=0.2 , random_state=4)
accuracies = []
for k in range(1, 10):
    knn_classifier = KNeighborsClassifier(n_neighbors=k)
    knn_model = knn_classifier.fit(X_train, y_train)
    y_pred = knn_model.predict(X_test)
    acc = accuracy_score(y_test, y_pred)
    accuracies.append(acc)
    print(f"Accuracy for {k} is {acc}")
plt.plot(range(1, 10), accuracies, marker='o')
plt.title("KNN Accuracy vs Number of Neighbors")
plt.xlabel("Number of Neighbors (k)")
plt.ylabel("Accuracy")
plt.xticks(range(1, 10))
plt.grid(True)
plt.show()
